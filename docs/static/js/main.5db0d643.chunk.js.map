{"version":3,"sources":["components/AppLoader/index.js","components/AppLoader/AppLoader.jsx","components/Step/index.js","components/Step/Step.jsx","components/Nav/index.js","components/Nav/Nav.jsx","components/ProductGrid/ProductGrid.jsx","components/ProductGrid/index.js","components/MixinsControlGroup/index.js","components/MixinsControlGroup/MixinsControlGroup.jsx","components/AddonRow/index.js","components/AddonRow/AddonRow.jsx","components/AddMixinModal/AddMixinModal.jsx","components/AddMixinModal/index.js","App.jsx","serviceWorker.js","index.js"],"names":["AppContent","react_default","a","createElement","className","this","props","loading","Component","Step","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","current","children","Nav","handleStepChange","step","selectedProduct","goToStep","bind","assertThisInitialized","_this2","steps","currentStep","_loop","i","isActive","push","concat","key","type","onClick","title","totalSteps","map","active","id","ProductGrid","isProductSelected","product","onProductSelected","_AppData","products","ProductGrid_Product","onSelect","onProductSelect","Product","src","img","alt","MixinsControlGroup","addonsAdded","length","addon","rows","r","console","log","indexOf","quantity","label","openModal","AddonRow","onSelectQuantity","setState","row","onSelectAddon","addonsForType","ADDONS","react_select_esm","classNamePrefix","options","QUANTITIES","value","onChange","placeholder","slice","removeAddonRow","width","height","version","xmlns","x","y","viewBox","fill","d","Modal","setAppElement","defaultStyles","overlay","backgroundColor","customStyles","content","top","left","right","bottom","marginRight","transform","fontSize","padding","overflow","maxWidth","h2","initialState","addonRows","Date","getTime","AddMixinModal","addNewAddonRow","toConsumableArray","filteredAddonRows","filter","lib_default","style","isOpen","modalIsOpen","onAfterOpen","afterOpenModal","onRequestClose","closeModal","contentLabel","replace","charAt","toUpperCase","components_AddonRow","selectedAddon","selectedQuantity","onSubmitMixin","STEPS","App","modal","open","stats","activeStep","JSON","stringify","selected","setTimeout","_ref","newAddon","addons","_this3","StepsNav","components_Nav","Step2","href","shop_url","cals","fats","total_carbs","fiber","sugar","protein","keys","addonType","components_MixinsControlGroup","addAddon","components_AddMixinModal","min","max","components_AppLoader","react_step_wizard_min_default","nav","onStepChange","isLazyMount","components_ProductGrid","stepHandler","components_Step","data-app-toggle-active","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.5db0d643.chunk.js","sourcesContent":["import AppContent from \"./AppLoader.jsx\";\n\nexport default AppContent;\n","import React, {Component} from \"react\";\n\nclass AppLoader extends Component {\n    render() {\n        return (\n            <div className={this.props.loading ? \"app-is--loading\" : \"\"}>\n                <section className={\"app-section app-loader\"}>\n                    <div className=\"app-loading-container\">\n                        <div className=\"app-loading-animation\"/>\n                        <h3>Loading</h3>\n                    </div>\n                </section>\n            </div>\n        );\n    }\n}\n\nexport default AppLoader;\n","import Step from \"./Step\";\n\nexport default Step;\n","import React, { Component } from \"react\";\n\nclass Step extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      current: props.current\n    };\n  }\n  render() {\n    return <div>{this.props.children}</div>;\n  }\n}\n\nexport default Step;\n","import \"./Nav.scss\";\nimport Nav from \"./Nav\";\n\nexport default Nav;\n","import React, { Component } from \"react\";\n\nclass Nav extends Component {\n  constructor(props) {\n    super(props);\n    this.handleStepChange = this.handleStepChange.bind(this);\n  }\n\n  render() {\n    let steps = [];\n    const currentStep = this.props.currentStep;\n    for (let i = 1; i <= this.props.totalSteps; i += 1) {\n      const isActive = currentStep >= i;\n      steps.push(\n        <li\n          className={`progress-step-${i} ${isActive ? \"active\" : \"\"}`}\n          key={i}\n        >\n          <button\n            type=\"button\"\n            onClick={() => this.handleStepChange(i)}\n            className={\n              this.props.selectedProduct === null && i > 1 ? \"disabled\" : \"\"\n            }\n          >\n            {i}. {this.props.steps[i - 1].title}\n          </button>\n        </li>\n      );\n    }\n\n    return (\n      <div>\n        <nav className=\"app-progress-bar\">\n          <ul>{steps}</ul>\n        </nav>\n        <div className=\"app-title\">\n          <h2>\n            Step {currentStep}: {this.props.steps[currentStep - 1].title}\n            {this.props.steps.map(\n              step => step.active && step.id + \": \" + step.title\n            )}\n          </h2>\n          <h1>\n            {currentStep === 1\n              ? \"Recipe Nutrition Calculator\"\n              : currentStep === 2\n              ? \"What's Your Recipe\"\n              : \"Your Nutrition Brakedown\"}\n          </h1>\n          {currentStep <= 1 ? (\n            \"\"\n          ) : (\n            <button\n              onClick={() => this.props.goToStep(currentStep - 1)}\n              className=\"app-back--button\"\n            >\n              <i className=\"fas fa-angle-left\" />\n              Back\n            </button>\n          )}\n        </div>\n      </div>\n    );\n  }\n\n  handleStepChange = step => {\n    if (this.props.selectedProduct !== null) {\n      this.props.goToStep(step);\n    }\n  };\n}\n\nexport default Nav;\n","import React, { Component } from \"react\";\nimport _AppData from \"../../data.json\";\n\nconst devMode = process.env.NODE_ENV !== \"production\";\n\nclass ProductGrid extends Component {\n  isProductSelected = product => {\n    return this.props.selectedProduct == product;\n  };\n  onProductSelected = product => {\n    if (this.isProductSelected(product)) {\n      this.props.goToStep(this.props.currentStep + 1);\n    }\n  };\n  render() {\n    return (\n      <div>\n        <div className=\"product-grid\">\n          {_AppData.products.map((product, key) => {\n            return (\n              <Product\n                product={product}\n                key={key}\n                onSelect={() => {\n                  this.props.onProductSelect(product);\n                  this.onProductSelected();\n                }}\n                isProductSelected={this.isProductSelected}\n              />\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Product extends Component {\n  render() {\n    const product = this.props.product;\n    return (\n      <article\n        onClick={this.props.onSelect}\n        id={\"product--\" + product.id}\n        className={\n          \"product \" + (this.props.isProductSelected(product) ? \"selected\" : \"\")\n        }\n      >\n        <div className=\"product__img\">\n          <img\n            src={(!devMode ? \"/rc-nutrition-calculator\" : \"\") + product.img}\n            alt={product.title}\n          />\n        </div>\n        <div className=\"product__title\">{product.title}</div>\n      </article>\n    );\n  }\n}\n\nexport default ProductGrid;\n","import ProductGrid from \"./ProductGrid.jsx\";\n\nexport default ProductGrid;\n","import MixinsControlGroup from \"./MixinsControlGroup.jsx\";\n\nexport default MixinsControlGroup;\n","import React, { Component } from \"react\";\n\nclass MixinsControlGroup extends Component {\n  render() {\n    return (\n      <div\n        id={`mixinsCtrlGroup__${this.props.type}`}\n        className={`mixins-controls-group--${\n          this.props.type\n        } mixins-controls-group`}\n      >\n        <div className=\"mixins-controls-header\">\n          <div className=\"mixins-controls-header__img\" />\n          <h4>Healthy {this.props.type}</h4>\n          <button\n            type=\"button\"\n            className=\"disabled text-button visually-hidden\"\n          >\n            Edit\n          </button>\n        </div>\n        {this.props.addonsAdded.length > 0 ? (\n          <div className=\"mixins-controls-list\">\n            <ul className=\"mixins-ingredients-list\">\n              {this.props.addonsAdded.map(addon => {\n                if (addon.type == this.props.type)\n                  return addon.rows.map(r => {\n                    console.log(r);\n                    return (\n                      <li key={addon.rows.indexOf(r)}>\n                        {r.quantity.label} {r.label}\n                      </li>\n                    );\n                  });\n              })}\n            </ul>\n          </div>\n        ) : (\n          <button\n            className=\"button--add button--outline\"\n            onClick={() => this.props.openModal(this.props.type)}\n          >\n            Add {this.props.type}\n          </button>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default MixinsControlGroup;\n","import AddonRow from \"./AddonRow.jsx\";\n\n\nexport default AddonRow;","import React, {Component} from \"react\";\nimport Select from \"react-select\";\nimport { addons as ADDONS, quantities as QUANTITIES } from \"../../data.json\";\n\nclass AddonRow extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            row: props.row\n        }\n    }\n\n    onSelectQuantity = (quantity) =>  {\n        this.setState({\n            row: {\n                quantity\n            }\n        });\n    };\n  \n    onSelectAddon = (addon) =>  {\n        this.setState({\n            row: {\n                addon\n            }\n        });\n    };\n\n    render() {\n        const row = this.props.row;\n        const type = this.props.type;\n        const addonsForType = ADDONS[type];\n        return (\n            <div className={`row row-${row.id} align-items-center`}>\n                <div className=\"col-sm\">\n                <Select\n                    row={row}\n                    classNamePrefix=\"app-select\"\n                    options={QUANTITIES}\n                    value={this.state.row.quantity}\n                    onChange={this.onSelectQuantity}\n                    placeholder={\"Select Quantity\"}\n                />\n                </div>\n                <div className=\"col-sm-auto\">of</div>\n                <div className=\"col-sm\">\n                <Select\n                    row={row}\n                    classNamePrefix=\"app-select\"\n                    options={addonsForType}\n                    onChange={this.onSelectAddon}\n                    placeholder={`Choose a ${type && type.slice(0, -1)}`}\n                    value={this.state.row.addon}\n                />\n                </div>\n                <div className=\"col-sm-auto p-0\">\n                <button\n                    onClick={this.props.removeAddonRow}\n                    className=\"button button-remove--addonrow\"\n                >\n                    <svg width=\"12px\" height=\"12px\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"  x=\"0px\" y=\"0px\"\n                        viewBox=\"0 0 212.982 212.982\">\n                    <g id=\"Close\">\n                        <path fill=\"#d2d2d2\" d=\"M131.804,106.491l75.936-75.936c6.99-6.99,6.99-18.323,0-25.312\n                        c-6.99-6.99-18.322-6.99-25.312,0l-75.937,75.937L30.554,5.242c-6.99-6.99-18.322-6.99-25.312,0c-6.989,6.99-6.989,18.323,0,25.312\n                        l75.937,75.936L5.242,182.427c-6.989,6.99-6.989,18.323,0,25.312c6.99,6.99,18.322,6.99,25.312,0l75.937-75.937l75.937,75.937\n                        c6.989,6.99,18.322,6.99,25.312,0c6.99-6.99,6.99-18.322,0-25.312L131.804,106.491z\"/>\n                    </g>\n                    </svg>\n                </button>\n                </div>\n            </div>   \n        )\n    }\n}\n\nexport default AddonRow;","import React, { Component } from \"react\";\nimport \"./AddMixinModal.scss\";\nimport Modal from \"react-modal\";\nimport AddonRow from \"../AddonRow\";\n\nModal.setAppElement(\"#root\");\n\nModal.defaultStyles.overlay.backgroundColor = \"rgba(0,0,0,.45)\";\n\nconst customStyles = {\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\",\n    fontSize: \"1.6rem\",\n    padding: \"50px\",\n    overflow: \"visible\",\n    width: \"640px\",\n    maxWidth: \"100%\"\n  },\n  h2: {\n    fontSize: \"28px\"\n  }\n};\n\nconst initialState = {\n  addonRows: [\n    {\n      id: new Date().getTime(),\n      quantity: {\n        value: 1,\n        label: \"1 cup\"\n      },\n      addon: null\n    }\n  ]\n};\n\nclass AddMixinModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = initialState;\n  }\n\n  addNewAddonRow = row => {\n    this.setState(state => {\n      return {\n        addonRows: [...state.addonRows, row]\n      };\n    });\n  };\n\n  removeAddonRow = row => {\n    if (this.state.addonRows.length <= 1) {\n      return;\n    } else {\n      const filteredAddonRows = this.state.addonRows.filter(\n        r => r.id !== row.id\n      );\n      this.setState({\n        addonRows: filteredAddonRows\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <Modal\n          style={customStyles}\n          isOpen={this.props.modalIsOpen}\n          onAfterOpen={this.props.afterOpenModal}\n          onRequestClose={this.props.closeModal}\n          contentLabel={`Add ${this.props.type} to your mix`}\n        >\n          <div className=\"app-modal\">\n            <div className=\"app-modal--header\">\n              <h2 className=\"app-modal--title\">\n                Add{\" \"}\n                {this.props.type &&\n                  this.props.type.replace(\n                    this.props.type.charAt(0),\n                    this.props.type.charAt(0).toUpperCase()\n                  )}{\" \"}\n                to Your Recipe\n              </h2>\n              <img\n                className=\"app-modal--img\"\n                src={`/images/icons/icon-${this.props.type}.png`}\n                alt={this.props.type}\n              />\n            </div>\n            <div className=\"app-modal--body\">\n              {this.state.addonRows.map(row => {\n                return (\n                  <AddonRow\n                    key={row.id}\n                    row={row}\n                    type={this.props.type}\n                    selectedAddon={row.addon}\n                    selectedQuantity={row.quantity}\n                    removeAddonRow={() => this.removeAddonRow(row)}\n                    onSelectAddon={() => this.onSelectAddon(row)}\n                    onSelectQuantity={() => this.onSelectQuantity(row)}\n                  />\n                );\n              })}\n              <div className=\"row\">\n                <div className=\"col-12\">\n                  <button\n                    className=\"btn btn-add--row\"\n                    onClick={() => {\n                      console.log(\n                        \"before adding length was \",\n                        this.state.addonRows.length\n                      );\n                      this.addNewAddonRow({\n                        id: new Date().getTime(),\n                        quantity: {\n                          value: 1,\n                          label: \"1 cup\"\n                        },\n                        addon: null\n                      });\n                    }}\n                  >\n                    Add Another{\" \"}\n                    {this.props.type && this.props.type.slice(0, -1)} +\n                  </button>\n                </div>\n              </div>\n            </div>\n            <div className=\"app-modal--footer\">\n              <div className=\"row\">\n                <div className=\"col-auto\">\n                  <button\n                    className=\"button\"\n                    type=\"button\"\n                    onClick={() =>\n                      this.props.onSubmitMixin({\n                        type: this.props.type,\n                        rows: this.state.addonRows\n                      })\n                    }\n                  >\n                    Update Recipe\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default AddMixinModal;\n","import AddMixinModal from \"./AddMixinModal.jsx\";\n\nexport default AddMixinModal;\n","import React, { Component } from \"react\";\nimport StepWizard from \"react-step-wizard\";\nimport \"./App.scss\";\nimport AppLoader from \"./components/AppLoader\";\nimport Step from \"./components/Step\";\nimport Nav from \"./components/Nav\";\nimport ProductGrid from \"./components/ProductGrid\";\nimport MixinsControlGroup from \"./components/MixinsControlGroup\";\nimport AddMixinModal from \"./components/AddMixinModal\";\nimport { addons as ADDONS } from \"./data.json\";\n\nconst devMode = process.env.NODE_ENV !== \"production\";\nconst STEPS = [\n  { title: \"Pick Your Mix\" },\n  { title: \"What's Your Recipe\" },\n  { title: \"Nutrition Breakdown\" }\n];\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      loading: true,\n      stats: {},\n      currentStep: 1,\n      modal: {\n        open: false,\n        type: null\n      },\n      addons: [],\n      selected: {\n        product: null\n      }\n    };\n  }\n  openModal = type => {\n    this.setState({ modal: { open: true, type: type } });\n  };\n\n  afterOpenModal = () => {\n    // references are now sync'd and can be accessed.\n    // this.subtitle.style.fontSize = \"28px\";\n  };\n\n  closeModal = () => {\n    this.setState({ modal: { open: false, type: null } });\n  };\n\n  handleStepChange = stats => {\n    this.setState({\n      currentStep: stats.activeStep\n    });\n  };\n  isProductSelected = product => {\n    return (\n      JSON.stringify(this.state.selected.product) === JSON.stringify(product)\n    );\n  };\n\n  onProductSelect = product => {\n    this.setState(state => {\n      return {\n        selected: {\n          product: state.selected.product !== null ? null : product\n        },\n        loading: true\n      };\n    });\n\n    setTimeout(() => {\n      this.setState({\n        loading: false\n      });\n    }, 200);\n  };\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  onSubmitMixin = ({ type, rows }) => {\n    let newAddon = {\n      type: type,\n      rows: rows\n    };\n    this.setState(state => {\n      return {\n        addons: [...state.addons, newAddon],\n        modal: {\n          open: false,\n          type: null\n        }\n      };\n    });\n\n    console.log(this.state.addons);\n  };\n\n  render() {\n    const StepsNav = (\n      <Nav selectedProduct={this.state.selected.product} steps={STEPS} />\n    );\n\n    const Step2 = this.state.selected.product ? (\n      <section>\n        <div className=\"product-details\">\n          <div className=\"product-details__img\">\n            <img\n              src={\n                (!devMode ? \"/rc-nutrition-calculator\" : \"\") +\n                this.state.selected.product.img\n              }\n              alt={this.state.selected.product.title}\n            />\n          </div>\n          <div className=\"product-details__info\">\n            <h2>\n              {this.state.selected.product.title}\n              <a href={this.state.selected.product.shop_url}>Shop Now</a>\n            </h2>\n            <div className=\"product-nutrition\">\n              <div className=\"nutrition-item--cals nutrition-item\">\n                <div className=\"nutrition-item__label\">Calories</div>\n                <div className=\"nutrition-item__value\">\n                  {this.state.selected.product.stats.cals}\n                </div>\n              </div>\n              <div className=\"nutrition-item--fats nutrition-item\">\n                <div className=\"nutrition-item__label\">Fats</div>\n                <div className=\"nutrition-item__value\">\n                  {this.state.selected.product.stats.fats}\n                </div>\n              </div>\n              <div className=\"nutrition-item--carbs nutrition-item\">\n                <div className=\"nutrition-item--carbs__total\">\n                  <div className=\"nutrition-item__label\">Total Carbs</div>\n                  <div className=\"nutrition-item__value\">\n                    {this.state.selected.product.stats.total_carbs}\n                  </div>\n                </div>\n                <div className=\"nutrition-item--carbs__breakdown\">\n                  <div className=\"carbs-breakdown-item\">\n                    {this.state.selected.product.stats.fiber}\n                    <span>G Fiber</span>\n                  </div>\n                  <div className=\"carbs-breakdown-item\">\n                    {this.state.selected.product.stats.sugar}\n                    <span>G Sugars</span>\n                  </div>\n                </div>\n              </div>\n              <div className=\"nutrition-item--protein nutrition-item\">\n                <div className=\"nutrition-item__label\">Protein</div>\n                <div className=\"nutrition-item__value\">\n                  {this.state.selected.product.stats.protein}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"app-mixins\">\n          <div className=\"app-mixins-title\">\n            <h3>Now, Add Your Mixins</h3>\n          </div>\n          <div className=\"app-mixins-controls\">\n            {Object.keys(ADDONS).map((addonType, i) => {\n              return (\n                <MixinsControlGroup\n                  key={i}\n                  type={addonType}\n                  addAddon={this.addAddon}\n                  addonsAdded={this.state.addons.filter(\n                    addon => addon.type === addonType\n                  )}\n                  openModal={this.openModal}\n                />\n              );\n            })}\n            <AddMixinModal\n              openModal={this.openModal.bind(this)}\n              closeModal={this.closeModal.bind(this)}\n              type={this.state.modal.type}\n              modalIsOpen={this.state.modal.open}\n              addonRows={this.state.addonRows}\n              onSubmitMixin={this.onSubmitMixin}\n            />\n          </div>\n\n          <div className=\"app-mixins-cta\">\n            <div className=\"app-mixins-cta-block\">\n              <div className=\"servings-form\">\n                <span>Divided into</span>\n                <input type=\"number\" id=\"servings-input\" min=\"0\" max=\"40\" />\n                <span>bars / balls</span>\n              </div>\n              <button className=\"button\">View Nutrition Breakdown</button>\n            </div>\n          </div>\n        </div>\n      </section>\n    ) : (\n      \"\"\n    );\n    return (\n      <div id=\"appContent\">\n        <AppLoader loading={this.state.loading} />\n        <StepWizard\n          nav={StepsNav}\n          onStepChange={this.handleStepChange}\n          isLazyMount\n        >\n          <ProductGrid\n            selectedProduct={this.state.selected.product}\n            onProductSelect={this.onProductSelect}\n            stepHandler={this.props.goToStep}\n          />\n          <Step currentStep={this.state.currentStep}>{Step2}</Step>\n          <Step currentStep={this.state.currentStep}>\n            <section className=\"app-section-3\">\n              <div className=\"app-breakdown--peanut app-breakdown\">\n                <div className=\"app-breakdown__main\">\n                  <div className=\"app-breakdown__product-img-wrap\">\n                    <div className=\"app-breakdown__product-img\" />\n                  </div>\n                  <div className=\"app-breakdown__titles\">\n                    <h2 className=\"h1\">PB &amp; Jelly Get in My Belly</h2>\n                    <div className=\"breakdown-mixins-description\">\n                      with 1 cup water, 2 oz. mashed bananas, 2 oz. sunflower\n                      butter, and 1 oz. agave\n                    </div>\n                    <div className=\"breakdown-servings\">\n                      Split Into 8 Servings\n                    </div>\n                  </div>\n                  <div className=\"app-breakdown__toggle\">\n                    <div className=\"toggle\">\n                      <span\n                        className=\"toggle-control--serving toggle-control\"\n                        data-app-toggle-active\n                      >\n                        Per Serving\n                      </span>\n                      <span className=\"toggle-control--total toggle-control\">\n                        Recipe Total\n                      </span>\n                    </div>\n                  </div>\n                  <div className=\"app-breakdown__details\">\n                    <div className=\"product-nutrition\">\n                      <div className=\"nutrition-item--cals nutrition-item\">\n                        <div className=\"nutrition-item__label\">Calories</div>\n                        <div className=\"nutrition-item__value\">160</div>\n                      </div>\n                      <div className=\"nutrition-item--fats nutrition-item\">\n                        <div className=\"nutrition-item__label\">Fats</div>\n                        <div className=\"nutrition-item__value\">8</div>\n                      </div>\n                      <div className=\"nutrition-item--carbs nutrition-item\">\n                        <div className=\"nutrition-item--carbs__total\">\n                          <div className=\"nutrition-item__label\">\n                            Total Carbs\n                          </div>\n                          <div className=\"nutrition-item__value\">7</div>\n                        </div>\n                        <div className=\"nutrition-item--carbs__breakdown\">\n                          <div className=\"carbs-breakdown-item\">\n                            3 <span>G Fiber</span>\n                          </div>\n                          <div className=\"carbs-breakdown-item\">\n                            2 <span>G Sugars</span>\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"nutrition-item--protein nutrition-item\">\n                        <div className=\"nutrition-item__label\">Protein</div>\n                        <div className=\"nutrition-item__value\">12</div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"app-breakdown__share\">\n                  <h4>Save Your Nutrition Breakdown</h4>\n                  <form className=\"form--share\">\n                    <input type=\"email\" placeholder=\"Your email address\" />\n                    <button className=\"button--send button\">Send</button>\n                  </form>\n                </div>\n              </div>\n            </section>\n          </Step>\n        </StepWizard>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit http://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}